package br.com.starwar.javaclient;

import java.net.URI;
import java.net.URISyntaxException;
import java.util.Arrays;
import java.util.List;

import org.springframework.http.HttpEntity;
import org.springframework.http.HttpHeaders;
import org.springframework.http.HttpMethod;
import org.springframework.http.MediaType;
import org.springframework.http.ResponseEntity;
import org.springframework.web.client.RestTemplate;

import com.google.gson.Gson;

import br.com.starwar.model.ListaPlanetas;
import br.com.starwar.model.Planet;

public class JavaSpringClientTest {

	public static void main(String[] args) throws URISyntaxException {
		JavaSpringClientTest test = new JavaSpringClientTest();
	//	Planet planet = test.buscarPlaneta();
		test.listarPlaneta();
		
		/*People people = test.buscarPeople();
		
		if(people != null) {
			
		}*/
		//Film film = test.buscarFilms();
	}
	
	
	private void listarPlaneta() throws URISyntaxException {
		String baseUrl = "https://swapi.co/api/planets/";
	    URI uri = new URI(baseUrl);
	    Gson gson = new Gson();
	    
		 RestTemplate restTemplate = new RestTemplate();
		 HttpHeaders headers = new HttpHeaders();
         headers.setAccept(Arrays.asList(MediaType.APPLICATION_JSON));
         headers.add("user-agent", "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/54.0.2840.99 Safari/537.36");
		
         HttpEntity<String> entity = new HttpEntity<String>("parameters", headers);

         ResponseEntity<String> response = restTemplate.exchange(baseUrl, HttpMethod.GET,entity,String.class);
         String json = response.getBody();
       /*  Planet planet = gson.fromJson(json, Planet.class);
         return planet;*/
         System.out.println(json);
         ListaPlanetas lista = gson.fromJson(json, ListaPlanetas.class);
         
         List listPlaneta = lista.getResults();
         
         for(Object planeta: listPlaneta) {
        	 Planet pl = (Planet)planeta;
        	 
        	 System.out.println(pl);
         }
			
        		 
	}
	
	private Planet buscarPlaneta() throws URISyntaxException {
		String baseUrl = "https://swapi.co/api/planets/1/";
	    URI uri = new URI(baseUrl);
	    Gson gson = new Gson();
	    
		 RestTemplate restTemplate = new RestTemplate();
		 HttpHeaders headers = new HttpHeaders();
         headers.setAccept(Arrays.asList(MediaType.APPLICATION_JSON));
         headers.add("user-agent", "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/54.0.2840.99 Safari/537.36");
		
         HttpEntity<String> entity = new HttpEntity<String>("parameters", headers);

         ResponseEntity<String> response = restTemplate.exchange(baseUrl, HttpMethod.GET,entity,String.class);

         String json = response.getBody();
         System.out.println(json);
         Planet planet = gson.fromJson(json, Planet.class);
         return planet;
	}
	
/*	private People buscarPeople() throws URISyntaxException {
		String baseUrl = "https://swapi.co/api/people/1";
	    URI uri = new URI(baseUrl);
	    Gson gson = new Gson();
	    
		 RestTemplate restTemplate = new RestTemplate();
		 HttpHeaders headers = new HttpHeaders();
         headers.setAccept(Arrays.asList(MediaType.APPLICATION_JSON));
         headers.add("user-agent", "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/54.0.2840.99 Safari/537.36");
		
         HttpEntity<String> entity = new HttpEntity<String>("parameters", headers);

         ResponseEntity<String> response = restTemplate.exchange(baseUrl, HttpMethod.GET,entity,String.class);

         String json = response.getBody();
         System.out.println(json);
         People people = gson.fromJson(json, People.class);
         
      
         return people;
	}

	private Film buscarFilms() throws URISyntaxException {
		String baseUrl = "https://swapi.co/api/films/2";
	    URI uri = new URI(baseUrl);
	    Gson gson = new Gson();
	    
		 RestTemplate restTemplate = new RestTemplate();
		 HttpHeaders headers = new HttpHeaders();
         headers.setAccept(Arrays.asList(MediaType.APPLICATION_JSON));
         headers.add("user-agent", "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/54.0.2840.99 Safari/537.36");
		
         HttpEntity<String> entity = new HttpEntity<String>("parameters", headers);

         ResponseEntity<String> response = restTemplate.exchange(baseUrl, HttpMethod.GET,entity,String.class);

         String json = response.getBody();
         System.out.println(json);
         Film film = gson.fromJson(json, Film.class);
         
         return film;
	}*/
}
