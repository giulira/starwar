package br.com.starwar.endpoint;

import java.net.URI;
import java.net.URISyntaxException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpEntity;
import org.springframework.http.HttpHeaders;
import org.springframework.http.HttpMethod;
import org.springframework.http.HttpStatus;
import org.springframework.http.MediaType;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RestController;
import org.springframework.web.client.RestTemplate;

import com.google.gson.Gson;
import com.google.gson.internal.LinkedTreeMap;

import br.com.starwar.model.ListaPlanetas;
import br.com.starwar.model.Planet;
import br.com.starwar.repository.StarwarRepository;

@RestController
@RequestMapping("starwar")
public class StarWarEndpoint {
	@Autowired
	private StarwarRepository repository;
	
	@RequestMapping(method=RequestMethod.GET, path="/listarPlanetas")
	public ResponseEntity<?> listAll() throws URISyntaxException{
		String baseUrl = "https://swapi.co/api/planets/";
	    URI uri = new URI(baseUrl);
	    Gson gson = new Gson();
	    
		 RestTemplate restTemplate = new RestTemplate();
		 HttpHeaders headers = new HttpHeaders();
         headers.setAccept(Arrays.asList(MediaType.APPLICATION_JSON));
         headers.add("user-agent", "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/54.0.2840.99 Safari/537.36");
		
         HttpEntity<String> entity = new HttpEntity<String>("parameters", headers);

         ResponseEntity<String> response = restTemplate.exchange(baseUrl, HttpMethod.GET,entity,String.class);
         String json = response.getBody();
         ListaPlanetas lista = gson.fromJson(json, ListaPlanetas.class);
         List<LinkedTreeMap> parseLista = lista.getResults();
         
         List listaPlanetas = new ArrayList();
         for(int i=0; i<parseLista.size(); i++) {
        	 StringBuilder str = new StringBuilder();

        	 str.append("name= "+ parseLista.get(i).get("name")+" ");
        	 str.append("rotation_period= "+parseLista.get(i).get("rotation_period")+" ");
        	 str.append("orbital_period= "+parseLista.get(i).get("orbital_period")+" ");
        	 str.append("diameter= "+parseLista.get(i).get("diameter")+" ");
        	 str.append("climate= "+parseLista.get(i).get("climate")+" ");
        	 str.append("gravity= "+parseLista.get(i).get("gravity")+" ");
        	 str.append("terrain= "+parseLista.get(i).get("terrain")+" ");
        	 str.append("surface_water= "+parseLista.get(i).get("surface_water")+" ");
        	 str.append("population= "+parseLista.get(i).get("population")+" ");
        	 listaPlanetas.add(str.toString());
         }
         return new ResponseEntity<>(listaPlanetas, HttpStatus.OK);
	}
	
	public ResponseEntity<?> adicionarPlanetas() throws URISyntaxException {
		String baseUrl = "https://swapi.co/api/planets/";
	    URI uri = new URI(baseUrl);
	    Gson gson = new Gson();
	    
		 RestTemplate restTemplate = new RestTemplate();
		 HttpHeaders headers = new HttpHeaders();
         headers.setAccept(Arrays.asList(MediaType.APPLICATION_JSON));
         headers.add("user-agent", "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/54.0.2840.99 Safari/537.36");
		
         HttpEntity<String> entity = new HttpEntity<String>("parameters", headers);

         ResponseEntity<String> response = restTemplate.exchange(baseUrl, HttpMethod.GET,entity,String.class);
         String json = response.getBody();
         ListaPlanetas lista = gson.fromJson(json, ListaPlanetas.class);
         List<LinkedTreeMap> parseLista = lista.getResults();
         
         for(int i=0; i<parseLista.size(); i++) {
        	 Planet planet = new Planet();
        	 repository.save(planet);
         }
		
		return new ResponseEntity<>(HttpStatus.OK);
		
	}
}
